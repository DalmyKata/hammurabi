from git import Repo
from github3 import GitHub as GitHub
from pathlib import Path
from pydantic import BaseSettings
from typing import Any, Union

class CommonSettings(BaseSettings):
    dry_run: bool = ...
    rule_can_abort: bool = ...
    git_branch_name: str = ...
    git_base_name: str = ...
    repository: str = ...
    class Config:
        env_prefix: str = ...

class TOMLSettings(CommonSettings):
    github_token: str = ...
    log_level: str = ...
    pillar_config: Path
    pillar_name: str = ...
    target: Path

class Settings(CommonSettings):
    pillar: object = ...
    working_dir: Path = ...

class Config:
    github: Any = ...
    settings: Any = ...
    def __init__(self) -> None: ...
    @property
    def repo(self) -> Union[Repo, None]: ...
    @repo.setter
    def repo(self, repository: Any) -> None: ...
    def load(self, file: Union[str, Path]) -> Any: ...

config: Any
